[gd_resource type="VisualShader" load_steps=18 format=2]

[ext_resource path="res://Asset/Texture2D/grass.png" type="Texture2D" id=1]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.255701, 0.895368, 0.192665, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.0617753, 0.493492, 0.116947, 1 )

[sub_resource type="VisualShaderNodeMix" id=3]

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeFloatOp" id=5]
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTransformDecompose" id=6]

[sub_resource type="VisualShaderNodeFloatOp" id=7]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "vertex"

[sub_resource type="VisualShaderNodeFloatOp" id=11]

[sub_resource type="VisualShaderNodeFloatFunc" id=12]
default_input_values = [ 0, 0.2 ]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=13]

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id=15]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "world"

[resource]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_5;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorDecompose:2
	float n_out2p0 = n_out3p0.x;
	float n_out2p1 = n_out3p0.y;
	float n_out2p2 = n_out3p0.z;

// Input:7
	float n_out7p0 = TIME;

// Input:9
	mat4 n_out9p0 = MODEL_MATRIX;

// TransformDecompose:10
	vec3 n_out10p0 = n_out9p0[0].xyz;
	vec3 n_out10p1 = n_out9p0[1].xyz;
	vec3 n_out10p2 = n_out9p0[2].xyz;
	vec3 n_out10p3 = n_out9p0[3].xyz;

// ScalarOp:8
	float n_out8p0 = n_out7p0 * dot(n_out10p2, vec3(0.333333, 0.333333, 0.333333));

// ScalarFunc:5
	float n_out5p0 = sin(n_out8p0);

// ScalarOp:11
	float n_in11p1 = 0.10000;
	float n_out11p0 = n_out5p0 * n_in11p1;

// ScalarOp:12
	float n_out12p0 = n_out11p0 * n_out2p2;

// ScalarOp:4
	float n_out4p0 = n_out2p0 + n_out12p0;

// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out4p0, n_out2p1, n_out2p2);

// Output:0
	VERTEX = n_out6p0;

}

void fragment() {
// Color:3
	vec3 n_out3p0 = vec3(0.061775, 0.493492, 0.116947);
	float n_out3p1 = 1.000000;

// Color:2
	vec3 n_out2p0 = vec3(0.255701, 0.895368, 0.192665);
	float n_out2p1 = 1.000000;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:6
	float n_in6p0 = 2.00000;
	float n_out6p0 = n_in6p0 * dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

// VectorMix:4
	vec3 n_out4p0 = mix(n_out3p0, n_out2p0, vec3(n_out6p0));

// Output:0
	ALBEDO = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -972.596, -236.891 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 520, -40 )
nodes/vertex/2/node = SubResource( 9 )
nodes/vertex/2/position = Vector2( -640, 120 )
nodes/vertex/3/node = SubResource( 10 )
nodes/vertex/3/position = Vector2( -840, 100 )
nodes/vertex/4/node = SubResource( 11 )
nodes/vertex/4/position = Vector2( -80, -120 )
nodes/vertex/5/node = SubResource( 12 )
nodes/vertex/5/position = Vector2( -820, -200 )
nodes/vertex/6/node = SubResource( 13 )
nodes/vertex/6/position = Vector2( 180, 20 )
nodes/vertex/7/node = SubResource( 14 )
nodes/vertex/7/position = Vector2( -1180, -280 )
nodes/vertex/8/node = SubResource( 15 )
nodes/vertex/8/position = Vector2( -1020, -240 )
nodes/vertex/9/node = SubResource( 16 )
nodes/vertex/9/position = Vector2( -1640, -260 )
nodes/vertex/10/node = SubResource( 6 )
nodes/vertex/10/position = Vector2( -1420, -240 )
nodes/vertex/11/node = SubResource( 7 )
nodes/vertex/11/position = Vector2( -600, -200 )
nodes/vertex/12/node = SubResource( 8 )
nodes/vertex/12/position = Vector2( -380, -140 )
nodes/vertex/connections = PackedInt32Array( 3, 0, 2, 0, 2, 0, 4, 0, 6, 0, 0, 0, 4, 0, 6, 0, 2, 2, 6, 2, 8, 0, 5, 0, 7, 0, 8, 0, 9, 0, 10, 0, 5, 0, 11, 0, 2, 1, 6, 1, 11, 0, 12, 0, 12, 0, 4, 1, 2, 2, 12, 1, 10, 2, 8, 1 )
nodes/fragment/0/position = Vector2( 400, 220 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -220, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -220, 220 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 100, 180 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -320, 360 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -60, 380 )
nodes/fragment/connections = PackedInt32Array( 4, 0, 0, 0, 2, 0, 4, 1, 3, 0, 4, 0, 5, 0, 6, 1, 6, 0, 4, 2 )
